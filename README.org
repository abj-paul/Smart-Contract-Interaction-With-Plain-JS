* About
It is necessary to understand how everything works under the hood in order to understand how an interaction with blockchain works. In this project, we made a simple contract in hardhat solidity and deployed it in Sepolia testnet.
[[file:resources/main-page.png]]


Then we used plain JS and HTML to interact with it.


[[file:resources/setting-greeting.png]]
The interaction is mainly three phased.
** Getting an RPC Service Provider
As we know, to interact with the blockchain, we need some sort of RPC Service Provider that will actually execute the functions. For frontend, the RPC can be very simple. So frontend usually uses the metamask as RPC.

#+begin_src txt
MetaMask can be used as a RPC, but it is not a full-fledged RPC provider. It can be used to send and receive transactions, but it does not support all of the features that a full-fledged RPC provider does, such as listening for events or querying the blockchain state.
#+end_src

Now it is done through ~Injection~. Whenever a page loads, the metamask add-on injects window.etherium object into the page/window. Hence, the functions in our script.js can use the metamask to interact with etherium.

** ABI & Contract Address
We need the address where the contract was deployed and the ABI for the contract to interact with it, naturally.

** Transaction
Whenever we call a function in smart contract, a transaction gets created. So we need to ~await~ for the transaction to finish before going with next tasks.

* Installation
The installation is simple.

The backend is just plain solidity. For ease, you can just copy-paste the Greeter.sol over ~Remix~ and quickly deploy your smart contract in Sepolia.

For frontend, you need to run it using ~live-server~ because otherwise, browser thinks the js file is coming from local file directory and blocks it for security. If a script comes from a server, the browser accepts it.

So basically two step for installation.
1. Deploy the contract using Remix
2. Run the index.html using live-server.

And done! Now you can interact with the blockchain!
